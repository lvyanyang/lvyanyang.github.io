(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{409:function(t,e,o){"use strict";o.r(e);var v=o(25),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"权限认证"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#权限认证"}},[t._v("#")]),t._v(" 权限认证")]),t._v(" "),o("p",[t._v("接口调用可以设置权限，权限最小粒度为请求方法。")]),t._v(" "),o("h2",{attrs:{id:"使用方法"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[t._v("#")]),t._v(" 使用方法")]),t._v(" "),o("ol",[o("li",[t._v("如果要求接口调用者必须登录之后(接口调用时HttpHeader中添加有效的token值)才能访问，需要在所在ApiController(类级生效)或者ApiController方法(方法级生效)上使用"),o("code",[t._v("@Authorize")]),t._v("注解。")]),t._v(" "),o("li",[t._v("如果要指定的权限，需要在"),o("code",[t._v("@Authorize")]),t._v("注解上添加"),o("code",[t._v("code")]),t._v("属性，"),o("code",[t._v('@Authorize(code = "sys.dept.select")')]),t._v("，"),o("code",[t._v("code")]),t._v("值是在模块中定义的编码，多个权限编码之间用逗号隔开,如有多个编码需要同时满足才能通过认证。")]),t._v(" "),o("li",[t._v("接口Controller和页面Controller用法一致。")])]),t._v(" "),o("h2",{attrs:{id:"实现原理"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),o("p",[t._v("权限认证是通过拦截器实现的，拦截的地址是在"),o("code",[t._v("xci.api.intercept-url-patterns")]),t._v("的配置值，拦截器定义在"),o("code",[t._v("SysApplicationModule")]),t._v("模块中。")]),t._v(" "),o("p",[t._v("权限编码实现权限校验的完整流程：")]),t._v(" "),o("ol",[o("li",[t._v("添加模块。")]),t._v(" "),o("li",[t._v("添加角色，并给角色分配可访问的模块。")]),t._v(" "),o("li",[t._v("添加用户，并分配一个或者多个角色，多个角色的模块会合并到用户中。")]),t._v(" "),o("li",[t._v("在需要设置权限的ApiController或者方法上设置"),o("code",[t._v('@Authorize(code = "权限编码1,权限编码2...")')]),t._v("注解。")])])])}),[],!1,null,null,null);e.default=_.exports}}]);